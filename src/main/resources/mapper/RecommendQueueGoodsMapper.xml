<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chenlinghong.graduation.repository.dao.RecommendQueueGoodsDao">

    <resultMap id="BaseResultMap" type="com.chenlinghong.graduation.repository.domain.RecommendQueueGoods">
        <id column="id" property="id" jdbcType="INTEGER" javaType="Integer"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" javaType="Date"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" javaType="Date"/>
        <result column="deleted" property="deleted" jdbcType="VARCHAR" javaType="Integer"/>
        <result column="goods_id" property="goodsId" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result column="user_id" property="userId" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result column="recommend_type" property="recommendType" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <association property="goods" column="goods_id"
                     javaType="com.chenlinghong.graduation.repository.domain.Goods"
                     select="com.chenlinghong.graduation.repository.dao.GoodsDao.getById">
        </association>
    </resultMap>

    <sql id="Base_Column_List">
        gmt_create, gmt_modified, deleted, `user_id`, `goods_id`, `recommend_type`
    </sql>

    <sql id="column_list">
        `id`, <include refid="Base_Column_List"></include>
    </sql>

    <insert id="insert" parameterType="com.chenlinghong.graduation.repository.domain.RecommendQueueGoods">
        <selectKey keyProperty="id" order="AFTER" resultType="long">
            SELECT last_insert_id()
        </selectKey>
        INSERT into
        recommend_queue_goods(<include refid="Base_Column_List"></include>)
        values(current_timestamp , current_timestamp ,'0', #{userId}, #{goodsId}, #{recommendType})
    </insert>

    <insert id="insertBatch">
        INSERT into
        recommend_queue_goods(<include refid="Base_Column_List"></include>)
        values
        <foreach collection="recommendQueueGoodsList" item="item" separator=",">
            (current_timestamp , current_timestamp ,'0', #{item.userId}, #{item.goodsId}, #{item.recommendType})
        </foreach>
    </insert>

    <update id="deleteById" parameterType="int">
        update recommend_queue_goods
        set deleted = '1'
        where id = #{id}
    </update>

    <select id="getById" parameterType="Integer" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        recommend_queue_goods
        WHERE
        id=#{id} and deleted = '0'
    </select>

    <select id="listAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        recommend_queue_goods
        where deleted = '0'
        order by id desc
        <choose>
            <when test="offset != null and rows != null">
                limit #{offset},#{rows}
            </when>
            <otherwise>
                limit 0,10
            </otherwise>
        </choose>
    </select>

    <select id="listByUserAndType" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        recommend_queue_goods
        where user_id = #{userId} and recommend_type = #{recommendType} and deleted = '0'
        order by id desc
        <choose>
            <when test="offset != null and rows != null">
                limit #{offset},#{rows}
            </when>
            <otherwise>
                limit 0,10
            </otherwise>
        </choose>
    </select>

    <select id="countByUserAndType" resultType="long">
        SELECT
        count(distinct id)
        FROM
        recommend_queue_goods
        where user_id = #{userId} and recommend_type = #{recommendType} and deleted = '0'
    </select>

    <select id="count" resultType="long">
        SELECT
        count(*)
        FROM
        recommend_queue_goods
        where deleted = '0'
    </select>

    <update id="markRead">
        update recommend_queue_goods
        set deleted = '1'
        where user_id = #{userId} and recommend_type = #{recommendType} and deleted = '0'
    </update>


</mapper>